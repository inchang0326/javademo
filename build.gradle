plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.1")
}

dependencies {
    // Spring
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop' // AOP(Aspect Oriented Programming)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Cloud Config - Client
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Cloud Config - Clients Bus
    // implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    // Jasypt
    // * properties/yml 파일 내 속성값 암호화 라이브러리
    implementation group: 'org.jasypt', name: 'jasypt', version: '1.9.2'
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.3'

    // DB : MyBatis
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0"
    implementation "org.mybatis:mybatis:3.5.1"
    implementation "org.mybatis:mybatis-spring:2.0.1"
    implementation "org.mybatis:mybatis-typehandlers-jsr310:1.0.2"

    // DB : Embedded PostgreSQL
    runtimeOnly "org.postgresql:postgresql"
    implementation "com.opentable.components:otj-pg-embedded:0.13.3" // Docker
    implementation "org.flywaydb:flyway-core:6.5.3" // 프로젝트 단위로, 테이블 및 칼럼을 관리하기 위함(For MSA 구조) = db.migration

    // DB : JPA(Java Persistence API)
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    // View : Template Engine
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api'
    implementation group: 'ch.qos.logback', name: 'logback-core'
    implementation group: 'ch.qos.logback', name: 'logback-classic'
    implementation group: 'org.codehaus.janino', name: 'janino', version: '3.0.8'

    // Dev
    // * lombok은 기계적으로 작성해야 하는 getter/setter 등의 메소드를 자동 생성해준다.
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
